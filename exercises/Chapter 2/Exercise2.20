(define nil ())
(define (same-parity . w)
		(define (s-r count result items) 
			(cond ((= count (length items)) result)
				  ((has-same-parity (list-ref items 0) (list-ref items count)) 
					(s-r (+ count 1) (append result (list (list-ref items count))) items))
				   (else (s-r (+ count 1) result items))))
		(s-r 0 nil w))
(define (has-same-parity a b) (= (remainder a 2) (remainder b 2)))
(newline)
(display (same-parity 1 2 3 4 5 6 7))
(display (same-parity 2 3 4 6 8 3 3 10 9 8))