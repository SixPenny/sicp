(define (exponentiation? expression)
	(and (pair? expression) (eq? (car expression) '**)))

(define (base expression)
	(cadr expression))
(define (exponent expression)
	(caddr expression))
(define (make-exponentiation base exponent)
	(cond ((=number? base 0) 0)
		  ((=number? exponent 0) 1)
		  ((=number? exponent 1) base)
		  (else (list '** base exponent))))