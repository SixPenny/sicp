(define (make-mobile left right)
	(list left right))
	
(define (make-branch length structure)
	(list length structure))
a.	
(define (left-branch mobile) (car mobile))
(define (right-branch mobile) (car (cdr mobile)))
(define (branch-length branch) (car branch))
(define (branch-structure branch) (car (cdr branch)))
b.
(define (total-weight mobile) 
	(+ (branch-weight (left-branch mobile)) (branch-weight (right-branch mobile))))
(define (branch-weight branch)
	(+ (if (pair? (cdr branch)) (total-weight (cdr branch)) (cdr branch)) ))
c.	
(define (blanced mobile) 
	(= (branch-weight (left-branch mobile)) (branch-weight (right-branch mobile))))
d.
only need to change right-branch
(define (right-branch mobile) (cdr mobile))