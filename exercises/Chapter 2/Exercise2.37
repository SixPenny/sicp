(define (dot-product v w)
	(accumulate + 0 (map * v w)))

(define (matrix-*-vector m v)
	(map (lambda (x) (accumulate + 0 (map * x v))) m))

(define (transpose mat)
	(accumulate-n cons nil mat))
(define (matrix-*-matrix m n)
	(let ((cols (transpose n)))
		 (map * cols m)))