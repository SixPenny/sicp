(define (encode message tree)
	(if (null? message)
		'()
		(append (encode-symbol (car message) tree)
			(encode (cdr message) tree))))

(define (encode-symbol message tree)
	(cond ((and (leaf? tree) (eq? message (symbol-leaf tree))) nil)
		  ((leaf? tree) (error message " not in tree" tree))
		  ((contains message (symbols (left-branch tree))) (cons 0 (encode-symbol message (left-branch tree))))
		  (else (cons 1 (encode-symbol message (right-branch tree))))))
(define (contains message symbols)
	(cond ((null? symbols) #f)
		  ((eq? message (car symbols)) #t)
		  (else (contains message (cdr symbols)))
		))